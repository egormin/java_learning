package Variables_and_DataTypes;

public class Strings {
    public static void main(String[] args) {
        // ================== Работа со строками ==================

        // Конкатенация

        // 1 вариант
        String word1 = "Привет, ";
        String word2 = "Мир!";
        String phrase = word1 + word2;
        System.out.println(phrase);  // Привет, Мир!

        // 2 вариант
        System.out.println("Привет, " + "Мир!"); // Привет, Мир!


        // Форматирование строк
        System.out.printf("Это число %1$s", 1); // Это число 1
        System.out.printf("Это числа по порядку: %1$s и %2$s", 1,2); // Это числа по порядку: 1 и 2
        System.out.printf("Это чила наоборот: %3$d, %2$d и %1$d", 1, 2, 3); // Это чила наоборот: 3, 2 и 1

        // Примеры
        int a =1, b = 2, c = 3;

        // Конкатенация строк
        System.out.println("Это число " + a); // Это число 1

        // Форматирование строк с помощью метода format класса String
        //System.out.println("Это число %1$s", a); // Это ошибка.
        System.out.println(String.format("Это число %1$s", 1)); // Это число 1

        // Метод printf() принадлежит классу PrintStream, который отвечает за вывод информации и возвращает строку, отформатированную по заданным условиям
        System.out.printf("Это число %1$s \n" , a); // Это число 1
        System.out.printf("Это числа %1$s и %2$s \n", a, b); // Это числа 1 и 2
        System.out.printf("Это числа наоборот %2$s и %1$s \n", a, b); // Это числа наоборот 2 и 1

        // Форматирование вывода число pi
        System.out.printf("\n%1$+022.10f", Math.PI); // 3.141592653589793+022.10f
        // +0 - означает, что недостающие символы будут заполнены нолями
        // .10 - означает, что выведенное число будет иметь 10 знаков после запятой
        // f - форматирование с дробной частью
    }
}
